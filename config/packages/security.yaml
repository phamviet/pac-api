security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        in_memory: { memory: ~ }
        ldap:
            ldap:
                service: Symfony\Component\Ldap\Ldap
                base_dn: '%ldap_base_dn%'
                search_dn: '%ldap_search_dn%'
                search_password: '%ldap_search_password%'
                default_roles: ROLE_USER
                uid_key: uid
        all_users:
            chain:
                providers: ["in_memory", "ldap"]
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        login:
            pattern:  ^/login
            anonymous: true
            stateless: true

            json_login_ldap:
                provider: all_users
                check_path: security_login
                require_previous_session: false
                service: Symfony\Component\Ldap\Ldap
                dn_string: '%ldap_dn_string%'
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
        api:
            pattern:   ^/api
            stateless: true
            provider: all_users
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
         - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }
         - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
